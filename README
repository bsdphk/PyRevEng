
NOTICE (2019-11-11)
===================

This project is retired, please see the successor project:

	https://github.com/bsdphk/PyReveng3

Poul-Henning

Original README content
-----------------------

This is the latest instantiation of a long series of programable
reverse engineering/disassembly tools I have written.  Python seems
to work so well for this kind of work that I am trying to write a
general-purpose toolkit this time, which does not depend on a
particular memory layout, CPU architecture or for that matter
anything else.

For now, we are limited to 32 bits of memory width, but should
pythons array type grow a 64 bit subtype, we can go higher.

A good place to start is:

	cd tasks/mc6800_hp53xx
	python3.2 task_hp5370b.py
	less /tmp/_.hp5370b.txt

A much more advanced example can be found in:

	cd tasks/domus
	python3.2 task.py
	less /tmp/_.CATLI_OBJ00.txt

Enjoy,

Poul-Henning
